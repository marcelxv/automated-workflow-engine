name: CI

on:
  push:
    branches: [ main ]
    paths:
      - '**/*.json'
  pull_request:
    branches: [ main ]
    paths:
      - '**/*.json'
  workflow_dispatch:

jobs:
  validate-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup environment
        run: |
          # Install required tools for local testing
          if [ "$RUNNER_OS" = "Linux" ]; then
            if command -v apt-get &> /dev/null; then
              sudo apt-get update
              sudo apt-get install -y git curl jq
            elif command -v apk &> /dev/null; then
              apk add --no-cache git curl jq
            fi
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          npm init -y
          npm install ajv ajv-formats glob

      - name: List Files (Debug)
        run: |
          echo "Current directory contents:"
          ls -la
          echo "\nScripts directory contents:"
          ls -la scripts || echo "Scripts directory not found"
          echo "\nWorkflows directory contents:"
          ls -la workflows || echo "Workflows directory not found"

      - name: Manual File Detection
        id: manual-files
        run: |
          echo "Finding changed JSON files..."
          CHANGED_FILES=$(find workflows -name "*.json" -not -name "*package*.json")
          echo "Changed files: $CHANGED_FILES"
          echo "::set-output name=files::$CHANGED_FILES"

      - name: Run Workflow Validation
        if: success()
        run: |
          echo "Running workflow validation..."
          if [ -f "scripts/validate-workflows.js" ]; then
            node scripts/validate-workflows.js ./workflows
          else
            echo "Validation script not found, skipping validation"
            # For local testing, we'll consider this a success
            if [ "$GITHUB_ACTIONS" != "true" ]; then
              exit 0
            fi
            exit 1
          fi

      - name: Mock Authentication for Local Testing
        if: env.ACT
        id: mock-auth
        run: |
          echo "::set-output name=token::mock-token-for-local-testing"

      - name: Authenticate with Orkes
        if: success() && !env.ACT
        id: authenticate
        uses: fjogeleit/http-request-action@v1.9.1
        with:
          url: 'https://foodready-prod.orkesconductor.io/api/auth/login'
          method: 'POST'
          contentType: 'application/json'
          data: '{"keyId": "${{ secrets.ORKES_REPO_KEY }}", "keySecret": "${{ secrets.ORKES_REPO_SECRET }}"}'

      - name: Mock Deploy for Local Testing
        if: success() && env.ACT
        run: |
          echo "üöÄ Mock deployment for local testing"
          for file in ${{ steps.manual-files.outputs.files }}; do
            if [[ $file == *_schema.json ]]; then
              echo "Would deploy schema: $file"
              cat "$file"
            elif [[ ! $file =~ (_schema|_payload)\.json$ ]]; then
              echo "Would deploy workflow: $file"
              cat "$file"
            fi
          done

      - name: Deploy to Orkes
        if: success() && !env.ACT && steps.authenticate.outputs.response != ''
        env:
          ORKES_TOKEN: ${{ !env.ACT && fromJson(steps.authenticate.outputs.response).token || steps.mock-auth.outputs.token }}
        run: |
          for file in ${{ steps.manual-files.outputs.files }}; do
            if [[ $file == *_schema.json ]]; then
              echo "Deploying schema: $file"
              curl -X PUT \
                -H "Content-Type: application/json" \
                -H "X-Authorization: $ORKES_TOKEN" \
                -d @"$file" \
                "https://foodready-prod.orkesconductor.io/api/metadata/workflow/schema"
              
            elif [[ ! $file =~ (_schema|_payload)\.json$ ]]; then
              echo "Deploying workflow: $file"
              workflow_name=$(jq -r '.name' "$file")
              echo "Workflow name: $workflow_name"
              a
              curl -X PUT \
                -H "Content-Type: application/json" \
                -H "X-Authorization: $ORKES_TOKEN" \
                -d @"$file" \
                "https://foodready-prod.orkesconductor.io/api/metadata/workflow"
            fi
          done

      - name: Report Status
        if: always()
        run: |
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "‚úÖ Validation and deployment successful"
            exit 0
          else
            echo "‚ùå Validation or deployment failed"
            exit 1
          fi