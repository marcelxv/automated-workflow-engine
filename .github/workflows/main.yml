name: CI

on:
  push:
    branches: [ main ]
    paths:
      - 'workflows/**/*.json'
  pull_request:
    branches: [ main ]
    paths:
      - 'workflows/**/*.json'
  workflow_dispatch:

jobs:
  deploy-workflows:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install Dependencies
      run: |
        npm install ajv ajv-formats glob --no-package-lock

    - name: Run Validation
      id: validate
      run: |
        VALIDATION_OUTPUT=$(node scripts/validate-workflows.js ./workflows)
        echo "$VALIDATION_OUTPUT"
        if echo "$VALIDATION_OUTPUT" | grep -q "Total Workflows:"; then
          if echo "$VALIDATION_OUTPUT" | grep -q "Warnings:"; then
            echo "status=warning" >> $GITHUB_OUTPUT
          else
            echo "status=success" >> $GITHUB_OUTPUT
          fi
        else
          echo "status=failure" >> $GITHUB_OUTPUT
          exit 1
        fi

    - name: Authenticate with Orkes
      id: auth
      uses: fjogeleit/http-request-action@v1.9.1
      with:
        url: 'https://foodready-prod.orkesconductor.io/api/token'
        method: 'POST'
        contentType: 'application/json'
        data: >
          {
            "keyId": "${{ secrets.ORKES_REPO_KEY }}",
            "keySecret": "${{ secrets.ORKES_REPO_SECRET }}"
          }

    - name: Deploy Schemas and Workflows
      if: success() && steps.auth.outputs.response != ''
      run: |
        TOKEN=$(echo '${{ steps.auth.outputs.response }}' | jq -r '.token')
        if [ -z "$TOKEN" ] || [ "$TOKEN" = "null" ]; then
          echo "‚ùå Failed to extract auth token"
          exit 1
        fi
        
        echo "üîç Processing workflow files..."
        find workflows -type f -name "*.json" ! -name "*_payload.json" | while read file; do
          if [[ "$file" == *"_schema.json" ]]; then
            echo "üì§ Deploying schema: $file"
            RESPONSE=$(curl -s -X POST \
              -H "Content-Type: application/json" \
              -H "X-Authorization: $TOKEN" \
              -d @"$file" \
              -w "\n%{http_code}" \
              "https://foodready-prod.orkesconductor.io/api/schema")
            
            HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
            CONTENT=$(echo "$RESPONSE" | sed '$d')
            
            if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ]; then
              echo "‚úÖ Successfully registered schema: $file"
            else
              echo "‚ùå Failed to register schema: $file"
              echo "Status: $HTTP_CODE"
              echo "Response: $CONTENT"
              # Don't exit on schema failure, continue with workflow
              continue
            fi
          else
            echo "üì§ Deploying workflow: $file"
            RESPONSE=$(curl -s -X POST \
              -H "Content-Type: application/json" \
              -H "X-Authorization: $TOKEN" \
              -d @"$file" \
              -w "\n%{http_code}" \
              "https://foodready-prod.orkesconductor.io/api/metadata/workflow")
            
            HTTP_CODE=$(echo "$RESPONSE" | tail -n1)
            CONTENT=$(echo "$RESPONSE" | sed '$d')
            
            if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "201" ]; then
              echo "‚úÖ Successfully deployed workflow: $file"
            else
              echo "‚ùå Failed to deploy workflow: $file"
              echo "Status: $HTTP_CODE"
              echo "Response: $CONTENT"
              exit 1
            fi
          fi
        done

    - name: Report Status
      if: always()
      run: |
        echo "=== Deployment Summary ==="
        echo ""
        echo "Validation Status: ${{ steps.validate.outputs.status }}"
        
        if [[ -n "${{ steps.auth.outputs.response }}" ]]; then
          echo "Authentication: ‚úÖ Success"
          TOTAL_SCHEMAS=$(find workflows -type f -name "*_schema.json" | wc -l)
          TOTAL_WORKFLOWS=$(find workflows -type f -name "*.json" ! -name "*_schema.json" ! -name "*_payload.json" | wc -l)
          echo "Processed Schemas: $TOTAL_SCHEMAS"
          echo "Processed Workflows: $TOTAL_WORKFLOWS"
        else
          echo "Authentication: ‚ùå Failed"
        fi
        
        if [[ "${{ job.status }}" == "success" ]]; then
          echo "‚úÖ Overall Status: Success"
          exit 0
        else
          echo "‚ùå Overall Status: Failed"
          exit 1
        fi